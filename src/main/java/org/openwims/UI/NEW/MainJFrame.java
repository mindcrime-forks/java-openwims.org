/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.openwims.UI.NEW;

import java.awt.Color;
import java.util.Collections;
import java.util.Comparator;
import java.util.LinkedList;
import javax.swing.DefaultListModel;
import javax.swing.border.LineBorder;
import org.openwims.Objects.Lexicon.DependencySet;
import org.openwims.Objects.Lexicon.Sense;
import org.openwims.Objects.Lexicon.Word;
import org.openwims.UI.NewSenseJDialog;
import org.openwims.WIMGlobals;

/**
 *
 * @author jesseenglish
 */
public class MainJFrame extends javax.swing.JFrame {
    
    private SensesJList senses;
    private SenseEditorJPanel editor;
    private TemplatesJPanel templates;

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        this.setSize(1200, 800);
        
        this.senses = new SensesJList();
        this.senses.addSenseSelectionListener(new SensesJList.SenseSelectionListener() {
            public void senseSelected(Sense sense) {
                loadSense(sense);
            }
        });
        
        this.templates = new TemplatesJPanel();
        this.templates.addTemplatesListener(new TemplatesJPanel.TemplatesListener() {
            public void templateAdded(DependencySet template) {
                if (MainJFrame.this.editor == null) {
                    return;
                }
                
                MainJFrame.this.editor.getSense().addDependencySet(template);
                MainJFrame.this.editor.refresh();
                MainJFrame.this.validate();
                MainJFrame.this.repaint();
            }
        });
        
        this.SensesJScrollPane.setViewportView(this.senses);
        this.TemplateContainerJPanel.add(this.templates);
        
        this.jSplitPane1.setBorder(null);
        this.jSplitPane2.setBorder(null);
        
        this.SenseEditorJScrollPane.setBorder(new LineBorder(Color.LIGHT_GRAY, 1));
        this.TemplateContainerJPanel.setBorder(new LineBorder(Color.LIGHT_GRAY, 1));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSplitPane1 = new javax.swing.JSplitPane();
        jSplitPane2 = new javax.swing.JSplitPane();
        SenseEditorJScrollPane = new javax.swing.JScrollPane();
        TemplateContainerJPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        SensesJScrollPane = new javax.swing.JScrollPane();
        SearchFTextField = new com.jesseenglish.swingftfy.extensions.FTextField();
        NewJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 1));

        jSplitPane1.setDividerLocation(250);

        jSplitPane2.setDividerLocation(700);

        SenseEditorJScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jSplitPane2.setLeftComponent(SenseEditorJScrollPane);

        TemplateContainerJPanel.setLayout(new java.awt.GridLayout(1, 1));
        jSplitPane2.setRightComponent(TemplateContainerJPanel);

        jSplitPane1.setRightComponent(jSplitPane2);

        jPanel1.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(SensesJScrollPane, gridBagConstraints);

        SearchFTextField.setHintText("search");
        SearchFTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchFTextFieldKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        jPanel1.add(SearchFTextField, gridBagConstraints);

        NewJButton.setText("New");
        NewJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(NewJButton, new java.awt.GridBagConstraints());

        jSplitPane1.setLeftComponent(jPanel1);

        getContentPane().add(jSplitPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchFTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchFTextFieldKeyReleased
        Word word = WIMGlobals.lexicon().word(this.SearchFTextField.getText());
        
        LinkedList<Sense> senses = word.listSenses();
        Collections.sort(senses, new SenseComparator());
        
        DefaultListModel model = new DefaultListModel();
        for (Sense sense : senses) {
            model.addElement(sense);
        }
        this.senses.setModel(model);
        
        this.validate();
        this.repaint();
    }//GEN-LAST:event_SearchFTextFieldKeyReleased

    private void NewJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewJButtonActionPerformed
        NewSenseJDialog d = new NewSenseJDialog(this, true);
        d.setVisible(true);
        
        if (d.isOk()) {
            Sense sense = d.sense();
            WIMGlobals.lexicon().addSense(sense);
            loadSense(sense);
        }
    }//GEN-LAST:event_NewJButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton NewJButton;
    private com.jesseenglish.swingftfy.extensions.FTextField SearchFTextField;
    private javax.swing.JScrollPane SenseEditorJScrollPane;
    private javax.swing.JScrollPane SensesJScrollPane;
    private javax.swing.JPanel TemplateContainerJPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    // End of variables declaration//GEN-END:variables

    private void loadSense(Sense sense) {
        this.editor = new SenseEditorJPanel(sense);
        this.editor.addSenseEditorListener(new DependencySetRemovedListener());

        this.SenseEditorJScrollPane.setViewportView(MainJFrame.this.editor);

        this.templates.setSelected(sense);

        this.validate();
        this.repaint();
    }

    private class SenseComparator implements Comparator<Sense> {

        @Override
        public int compare(Sense t, Sense t1) {
            return t.getId().compareTo(t1.getId());
        }
        
    }
    
    private class DependencySetRemovedListener implements SenseEditorJPanel.SenseEditorListener {
        
        public void dependencySetRemoved(Sense sense, DependencySet set) {
            MainJFrame.this.templates.refresh();
        }
        
    }

}
