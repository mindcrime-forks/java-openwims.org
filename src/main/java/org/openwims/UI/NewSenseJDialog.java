/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.openwims.UI;

import com.jesseenglish.swingftfy.extensions.FDialog;
import java.awt.Color;
import org.openwims.Objects.Lexicon.Sense;
import org.openwims.WIMGlobals;

/**
 *
 * @author jesseenglish
 */
public class NewSenseJDialog extends FDialog {
    
    private boolean ok;

    /**
     * Creates new form NewSenseJDialog
     */
    public NewSenseJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setSize(285, 135);
        this.center();
        this.ok = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        ConceptFTextField = new com.jesseenglish.swingftfy.extensions.FTextField();
        fLabel1 = new com.jesseenglish.swingftfy.extensions.FLabel();
        WordFTextField = new com.jesseenglish.swingftfy.extensions.FTextField();
        fLabel2 = new com.jesseenglish.swingftfy.extensions.FLabel();
        POSFTextField = new com.jesseenglish.swingftfy.extensions.FTextField();
        InstanceFLabel = new com.jesseenglish.swingftfy.extensions.FLabel();
        DefinitionFTextField = new com.jesseenglish.swingftfy.extensions.FTextField();
        jPanel1 = new javax.swing.JPanel();
        OKJButton = new javax.swing.JButton();
        CancelJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        ConceptFTextField.setHintText("concept");
        ConceptFTextField.setPreferredSize(new java.awt.Dimension(100, 28));
        ConceptFTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ConceptFTextFieldKeyReleased(evt);
            }
        });
        getContentPane().add(ConceptFTextField, new java.awt.GridBagConstraints());

        fLabel1.setText(":");
        getContentPane().add(fLabel1, new java.awt.GridBagConstraints());

        WordFTextField.setHintText("word");
        WordFTextField.setPreferredSize(new java.awt.Dimension(100, 28));
        WordFTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                WordFTextFieldKeyReleased(evt);
            }
        });
        getContentPane().add(WordFTextField, new java.awt.GridBagConstraints());

        fLabel2.setText("-");
        getContentPane().add(fLabel2, new java.awt.GridBagConstraints());

        POSFTextField.setHintText("pos");
        POSFTextField.setPreferredSize(new java.awt.Dimension(37, 28));
        POSFTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                POSFTextFieldKeyReleased(evt);
            }
        });
        getContentPane().add(POSFTextField, new java.awt.GridBagConstraints());

        InstanceFLabel.setText("-?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        getContentPane().add(InstanceFLabel, gridBagConstraints);

        DefinitionFTextField.setHintText("definition");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(DefinitionFTextField, gridBagConstraints);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 0, 0));

        OKJButton.setText("OK");
        OKJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(OKJButton);

        CancelJButton.setText("Cancel");
        CancelJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(CancelJButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OKJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKJButtonActionPerformed
        this.ok = true;
        this.dispose();
    }//GEN-LAST:event_OKJButtonActionPerformed

    private void CancelJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelJButtonActionPerformed
        this.ok = false;
        this.dispose();
    }//GEN-LAST:event_CancelJButtonActionPerformed

    private void ConceptFTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ConceptFTextFieldKeyReleased
        validateConcept();
        updateInstance();
    }//GEN-LAST:event_ConceptFTextFieldKeyReleased

    private void WordFTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_WordFTextFieldKeyReleased
        updateInstance();
    }//GEN-LAST:event_WordFTextFieldKeyReleased

    private void POSFTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_POSFTextFieldKeyReleased
        updateInstance();
    }//GEN-LAST:event_POSFTextFieldKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelJButton;
    private com.jesseenglish.swingftfy.extensions.FTextField ConceptFTextField;
    private com.jesseenglish.swingftfy.extensions.FTextField DefinitionFTextField;
    private com.jesseenglish.swingftfy.extensions.FLabel InstanceFLabel;
    private javax.swing.JButton OKJButton;
    private com.jesseenglish.swingftfy.extensions.FTextField POSFTextField;
    private com.jesseenglish.swingftfy.extensions.FTextField WordFTextField;
    private com.jesseenglish.swingftfy.extensions.FLabel fLabel1;
    private com.jesseenglish.swingftfy.extensions.FLabel fLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    public boolean isOk() {
        return this.ok;
    }
    
    private void validateConcept() {
        if (WIMGlobals.ontology().concepts().contains(this.ConceptFTextField.getText().trim())) {
            this.ConceptFTextField.setBackground(Color.WHITE);
        } else {
            this.ConceptFTextField.setBackground(new Color(1.0f, 0.6f, 0.3f));
        }
        
        this.validate();
        this.repaint();
    }
    
    private void updateInstance() {
        String concept = this.ConceptFTextField.getText().trim();
        String word = this.WordFTextField.getText().trim();
        String pos = this.POSFTextField.getText().trim();
        
        int next = WIMGlobals.lexicon().nextInstanceNumber(concept, word, pos);
        this.InstanceFLabel.setText("-" + next);
        
        if (concept.equalsIgnoreCase("") || word.equalsIgnoreCase("") || pos.equalsIgnoreCase("")) {
            this.InstanceFLabel.setText("-?");
        }
        
        this.validate();
        this.repaint();
    }
    
    public Sense sense() {
        String concept = this.ConceptFTextField.getText().trim();
        String word = this.WordFTextField.getText().trim();
        String pos = this.POSFTextField.getText().trim();
        
        int next = WIMGlobals.lexicon().nextInstanceNumber(concept, word, pos);
        
        Sense sense = new Sense(concept, word, pos, next);
        sense.setDefinition(this.DefinitionFTextField.getText().trim());
        
        return sense;
    }
    
}
